@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();

    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "gvUsers";
        settings.CallbackRouteValues = new { Controller = "Account", Action = "UserGridViewPartial" };
        settings.Width = Unit.Percentage(100);
        settings.SettingsPager.PageSize = 10;
        settings.Styles.AlternatingRow.Enabled = DefaultBoolean.True;
        settings.Settings.ShowFilterRow = true;

        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Account", Action = "UserUpdate" };

        settings.Toolbars.Add(toolbar =>
        {
            toolbar.Enabled = true;
            toolbar.Position = GridToolbarPosition.Top;
            toolbar.ItemAlign = GridToolbarItemAlign.Left;
            toolbar.Items.Add(GridViewToolbarCommand.Refresh, true);

            toolbar.Items.Add(i =>
            {
                i.Text = "Export to";
                i.Image.IconID = DevExpress.Web.ASPxThemes.IconID.ActionsDownload16x16office2013;
                i.BeginGroup = true;
                i.Items.Add(GridViewToolbarCommand.ExportToPdf);
                i.Items.Add(GridViewToolbarCommand.ExportToDocx);
                i.Items.Add(GridViewToolbarCommand.ExportToRtf);
                i.Items.Add(GridViewToolbarCommand.ExportToXls).Text = "Export to XLS(DataAware)";
                i.Items.Add(exportitem =>
                {
                    exportitem.Name = "CustomExportToXLS";
                    exportitem.Text = "Export to XLS(WYSIWYG)";
                    exportitem.Image.IconID = DevExpress.Web.ASPxThemes.IconID.ExportExporttoxls16x16office2013;
                });
                i.Items.Add(GridViewToolbarCommand.ExportToXlsx).Text = "Export to XLSX(DataAware)";
                i.Items.Add(exportitem =>
                {
                    exportitem.Name = "CustomExportToXLSX";
                    exportitem.Text = "Export to XLSX(WYSIWYG)";
                    exportitem.Image.IconID = DevExpress.Web.ASPxThemes.IconID.ExportExporttoxlsx16x16office2013;
                });
            });
        });

        settings.KeyFieldName = "UserId";
        settings.Columns.Add(column =>
        {
            column.FieldName = "PhotoUri";
            column.Caption = "Photo";
            column.ColumnType = MVCxGridViewColumnType.Image;


            column.SetDataItemTemplateContent(e =>
            {
                var url = DataBinder.Eval(e.DataItem, "PhotoUri").ToString();
                if (!url.IsEmpty())
                {
                    Html.DevExpress().Image(imgSettings =>
                    {
                        imgSettings.ImageUrl = DataBinder.Eval(e.DataItem, "PhotoUri").ToString();
                        imgSettings.Height = 50;
                        imgSettings.Width = 50;
                    }).Render();
                }
                else
                {
                    Html.DevExpress().Image(imgSettings =>
                    {
                        imgSettings.ImageUrl = Url.Content("~/Content/Images/iconPicture.png");
                        imgSettings.Height = 50;
                        imgSettings.Width = 50;
                    }).Render();
                }

            });
        });
        settings.Columns.Add("FirstName");
        settings.Columns.Add("LastName");
        settings.Columns.Add(column =>
        {
            column.FieldName = "PhoneNumber";
            column.Caption = "Phone";
        });
        settings.Columns.Add("Email");
        settings.Columns.Add("City");
        settings.Columns.Add("State");
        settings.Columns.Add(column =>
        {
            column.FieldName = "CreateDateTime";
            column.Caption = "Join Date(EST)";

            //column.ColumnType = MVCxGridViewColumnType.DateEdit;
            //column.Settings.AutoFilterCondition = AutoFilterCondition.Equals;
            column.SortOrder = DevExpress.Data.ColumnSortOrder.Descending;
            column.PropertiesEdit.DisplayFormatString = "g";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IsActive";
            column.Caption = "Active";

            column.ColumnType = MVCxGridViewColumnType.CheckBox;
            column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
            column.HeaderStyle.Font.Bold = true;
            column.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            column.Width = 100;
        });

        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.VisibleIndex = settings.Columns.Count;
        settings.CommandColumn.Visible = true;
        settings.CommandColumn.Width = 150;

        settings.EditFormLayoutProperties.Items.Add("Active");

        settings.Styles.Cell.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Header.Font.Bold = true;

        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.SettingsPager.FirstPageButton.Visible = true;
        settings.SettingsPager.LastPageButton.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "40", "60" };
        settings.SettingsPager.EnableAdaptivity = true;

        //settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = false;
        settings.SettingsDetail.ShowDetailRow = true;
      
        settings.SetDetailRowTemplateContent(c =>
        {
            Html.RenderAction("UserTicketsPartial", new
            {
                userId = DataBinder.Eval(c.DataItem, "UserId"),

            });
        });

        settings.CustomColumnDisplayText = (s, e) =>
        {
            if (e.Column.FieldName == "PhoneNumber")
            {
                string original = e.Value.ToString().Trim();
                e.DisplayText = string.Format("({0}) {1}-{2}", original.Substring(0, 3), original.Substring(3, 3), original.Substring(6, 4));

            }
        };

        settings.CellEditorInitialize = (s, e) =>
        {
            if (e.Column.FieldName != "IsActive")
            {
                e.Editor.ReadOnly = true;
            }

        };

    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()